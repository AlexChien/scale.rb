require "scale"

describe Scale::Types::Student do
  it "shoud decode from a scale hex string" do
    # 0x 01000000 45 00 0045
    scale_bytes = Scale::Bytes.new("0x0100000045000045")
    s1 = Scale::Types::Student.decode scale_bytes
    expect(s1.age.class).to eql(Scale::Types::U32)
    expect(s1.grade.class).to eql(Scale::Types::U8)
    expect(s1.courses_number.class).to eql(Scale::Types::OptionU32)
    expect(s1.int_or_bool.class).to eql(Scale::Types::IntOrBool)
    expect(s1.age.value).to eql(1)
    expect(s1.grade.value).to eql(69)
    expect(s1.courses_number.value).to eql(nil)
    expect(s1.int_or_bool.value.value).to eql(69)

    # 0x 01000000 45 0145000000 0045
    scale_bytes = Scale::Bytes.new("0x010000004501450000000045")
    s2 = Scale::Types::Student.decode scale_bytes
    expect(s2.age.value).to eql(1)
    expect(s2.grade.value).to eql(69)
    expect(s2.courses_number.value.value).to eql(69)
    expect(s2.int_or_bool.value.value).to eql(69)

    # 0x 01000000 45 00 0101
    scale_bytes = Scale::Bytes.new("0x0100000045000101")
    s3 = Scale::Types::Student.decode scale_bytes
    expect(s3.age.value).to eql(1)
    expect(s3.grade.value).to eql(69)
    expect(s3.courses_number.value).to eql(nil)
    expect(s3.int_or_bool.value.value).to eql(true)
  end
end
